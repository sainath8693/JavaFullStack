Great question! Let's clear up two important things:

---

## ✅ Part 1: All JavaScript String methods explained simply

> (With examples and whether they change original or return new)

---

### 📌 Important:

* ✅ Strings are immutable in JavaScript.
* ❗ That means string methods NEVER change the original string.
* They always return a new string or value.

---

### 🔹 1. length

🔸 What: Gives number of characters
🔸 Returns: a number
🔸 Changes original? ❌ No

js
let name = "John";
console.log(name.length); // 4


---

### 🔹 2. charAt(index)

🔸 What: Gets letter at position
🔸 Returns: a new string
🔸 Changes original? ❌ No

js
"Hello".charAt(1); // "e"


---

### 🔹 3. charCodeAt(index)

🔸 What: Gives Unicode number of character
🔸 Returns: a number
🔸 Changes original? ❌ No

js
"A".charCodeAt(0); // 65


---

### 🔹 4. toUpperCase()

🔸 What: Makes all letters uppercase
🔸 Returns: a new string
🔸 Changes original? ❌ No

js
"hello".toUpperCase(); // "HELLO"


---

### 🔹 5. toLowerCase()

🔸 What: Makes all letters lowercase
🔸 Returns: a new string
🔸 Changes original? ❌ No

js
"HELLO".toLowerCase(); // "hello"


---

### 🔹 6. includes(word)

🔸 What: Checks if text is inside
🔸 Returns: true or false
🔸 Changes original? ❌ No

js
"JavaScript".includes("Script"); // true


---

### 🔹 7. indexOf(word)

🔸 What: Finds first position of text
🔸 Returns: number
🔸 Changes original? ❌ No

js
"banana".indexOf("a"); // 1


---

### 🔹 8. lastIndexOf(word)

🔸 What: Finds last position of text
🔸 Returns: number
🔸 Changes original? ❌ No

js
"banana".lastIndexOf("a"); // 5


---

### 🔹 9. slice(start, end)

🔸 What: Cuts part of the string
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"JavaScript".slice(0, 4); // "Java"


---

### 🔹 10. substring(start, end)

🔸 What: Like slice but no negative numbers
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"JavaScript".substring(0, 4); // "Java"


---

### 🔹 11. substr(start, length) ❗Deprecated

🔸 What: Old way to get part of string
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"JavaScript".substr(0, 4); // "Java"


---

### 🔹 12. replace(old, new)

🔸 What: Replaces first match
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"I like cats".replace("cats", "dogs"); // "I like dogs"


---

### 🔹 13. replaceAll(old, new)

🔸 What: Replaces all matches
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"abc abc".replaceAll("abc", "123"); // "123 123"


---

### 🔹 14. trim()

🔸 What: Removes spaces from both sides
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"  hello  ".trim(); // "hello"


---

### 🔹 15. trimStart() or trimLeft()

🔸 What: Removes spaces from start
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"  hello".trimStart(); // "hello"


---

### 🔹 16. trimEnd() or trimRight()

🔸 What: Removes spaces from end
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"hello  ".trimEnd(); // "hello"


---

### 🔹 17. concat()

🔸 What: Joins two strings
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"Hello".concat(" World"); // "Hello World"


---

### 🔹 18. split(separator)

🔸 What: Splits string into array
🔸 Returns: an array
🔸 Changes original? ❌ No

js
"a,b,c".split(","); // ["a", "b", "c"]


---

### 🔹 19. startsWith(word)

🔸 What: Checks if string starts with word
🔸 Returns: true or false
🔸 Changes original? ❌ No

js
"JavaScript".startsWith("Java"); // true


---

### 🔹 20. endsWith(word)

🔸 What: Checks if string ends with word
🔸 Returns: true or false
🔸 Changes original? ❌ No

js
"Hello World".endsWith("World"); // true


---

### 🔹 21. repeat(number)

🔸 What: Repeats string
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"ha".repeat(3); // "hahaha"


---

### 🔹 22. match(regex)

🔸 What: Finds pattern (regex)
🔸 Returns: array of matches or null
🔸 Changes original? ❌ No

js
"The rain in Spain".match(/ain/g); // ["ain", "ain"]


---

### 🔹 23. search(regex)

🔸 What: Finds position of regex match
🔸 Returns: number
🔸 Changes original? ❌ No

js
"Hello".search(/e/); // 1


---

### 🔹 24. matchAll(regex)

🔸 What: All matches with details
🔸 Returns: iterator (convert to array)
🔸 Changes original? ❌ No

js
let result = [..."test1 test2".matchAll(/test\d/g)];
console.log(result); // [["test1"], ["test2"]]


---

### 🔹 25. padStart(length, text)

🔸 What: Adds characters at start
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"5".padStart(3, "0"); // "005"


---

### 🔹 26. padEnd(length, text)

🔸 What: Adds characters at end
🔸 Returns: new string
🔸 Changes original? ❌ No

js
"5".padEnd(3, "0"); // "500"


---

### 🔹 27. valueOf()

🔸 What: Returns primitive string value
🔸 Returns: string
🔸 Changes original? ❌ No

js
new String("hello").valueOf(); // "hello"


---

### 🔹 28. toString()

🔸 What: Converts to string
🔸 Returns: string
🔸 Changes original? ❌ No

js
let num = 123;
console.log(num.toString()); // "123"


---

## ✅ Summary Table: Change vs Return

| Method          | Changes Original? | Returns What?        |
| --------------- | ----------------- | -------------------- |
| toUpperCase() | ❌ No              | new string           |
| trim()        | ❌ No              | new string           |
| replace()     | ❌ No              | new string           |
| split()       | ❌ No              | array                |
| includes()    | ❌ No              | true / false         |
| slice()       | ❌ No              | new string           |
| charAt()      | ❌ No              | one character string |
| length        | ❌ No              | number               |

---

Would you like:

* A printable PDF version?
* A chart with colors?
* A code playground to test these?

Let me know how you'd like to learn further!
