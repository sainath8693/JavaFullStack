Here’s a detailed guide on JavaScript Strings, including key concepts, methods, and examples to help you understand and use strings effectively.

---

## 🧵 What is a String in JavaScript?

A String is a sequence of characters used to represent text. It's one of the primitive data types in JavaScript.

js
let greeting = "Hello, World!";


Strings in JavaScript can be declared using:

* Double quotes: "Hello"
* Single quotes: 'World'
* Backticks (template literals):  Hello ${name} 

---

## 📚 String Creation

js
let str1 = "Hello";
let str2 = 'World';
let str3 = Hello, ${str2};  // Template literal


---

## 🔎 String Properties

| Property | Description                      | Example            |
| -------- | -------------------------------- | ------------------ |
| length | Returns the number of characters | "abc".length → 3 |

js
let text = "JavaScript";
console.log(text.length); // 10


---

## 🔧 Common String Methods

### 🔹 1. charAt(index)

Returns the character at the given index.

js
"hello".charAt(1);  // "e"


### 🔹 2. slice(start, end)

Extracts part of a string.

js
"JavaScript".slice(0, 4);  // "Java"


### 🔹 3. substring(start, end)

Similar to slice, but doesn't accept negative indexes.

js
"JavaScript".substring(4, 10);  // "Script"


### 🔹 4. substr(start, length) *(deprecated but still works)*

Returns part of the string starting from start for length characters.

js
"JavaScript".substr(4, 6);  // "Script"


### 🔹 5. toUpperCase() / toLowerCase()

js
"hello".toUpperCase();  // "HELLO"
"HELLO".toLowerCase();  // "hello"


### 🔹 6. trim()

Removes whitespace from both ends.

js
"  hello  ".trim();  // "hello"


### 🔹 7. includes(substring)

Checks if a substring exists.

js
"JavaScript".includes("Script");  // true


### 🔹 8. startsWith() / endsWith()

js
"Hello World".startsWith("Hello");  // true
"Hello World".endsWith("World");    // true


### 🔹 9. replace() / replaceAll()

Replaces substrings.

js
"hello world".replace("world", "JavaScript");  // "hello JavaScript"
"aaa".replaceAll("a", "b");                    // "bbb"


### 🔹 10. split(separator)

Splits a string into an array.

js
"apple,banana,grape".split(",");  // ["apple", "banana", "grape"]


---

## 🧩 Template Literals (Backticks)

Used for multi-line strings and embedding expressions.

js
let name = "John";
let greeting = Hello, ${name}!;
console.log(greeting);  // Hello, John!


---

## 🔐 Escape Characters

| Escape | Meaning      |
| ------ | ------------ |
| \'   | Single quote |
| \"   | Double quote |
| \\   | Backslash    |
| \n   | New line     |
| \t   | Tab          |

js
let str = "He said, \"Hello\".\nHow are you?";


---

## 🔄 Looping Through a String

js
let str = "hello";
for (let char of str) {
  console.log(char);
}


---

## 🧠 Immutability of Strings

Strings are immutable—you can’t change characters directly:

js
let str = "hello";
str[0] = "H";  // ❌ does nothing
console.log(str); // "hello"


To modify:

js
str = "H" + str.slice(1);  // "Hello"


---

Would you like practice questions or code challenges to test your string skills?
